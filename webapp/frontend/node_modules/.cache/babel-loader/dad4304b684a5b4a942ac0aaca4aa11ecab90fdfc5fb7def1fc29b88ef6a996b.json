{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daanc\\\\Lost-in-Translation\\\\webapp\\\\frontend\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  theme: 'light',\n  toggleTheme: () => {}\n});\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    document.body.classList.remove('light', 'dark');\n    document.body.classList.add(theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"Z8UCD9KudyQA62DCQ9e5cf9+m5k=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","ThemeProvider","children","_s","setTheme","document","body","classList","remove","add","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/daanc/Lost-in-Translation/webapp/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\r\n\r\ntype Theme = 'light' | 'dark'\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme\r\n  toggleTheme: () => void\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType>({\r\n  theme: 'light',\r\n  toggleTheme: () => {},\r\n})\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [theme, setTheme] = useState<Theme>('light')\r\n\r\n  useEffect(() => {\r\n    document.body.classList.remove('light', 'dark')\r\n    document.body.classList.add(theme)\r\n  }, [theme])\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prev) => (prev === 'light' ? 'dark' : 'light'))\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useTheme = () => useContext(ThemeContext)\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAS7E,MAAMC,YAAY,gBAAGN,aAAa,CAAmB;EACnDO,KAAK,EAAE,OAAO;EACdC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGT,QAAQ,CAAQ,OAAO,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IAC/CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAACV,KAAK,CAAC;EACpC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBI,QAAQ,CAAEM,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAC3D,CAAC;EAED,oBACEb,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEC;IAAY,CAAE;IAAAE,QAAA,EAClDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAAb,EAAA,CAjBYF,aAAsD;AAAAgB,EAAA,GAAtDhB,aAAsD;AAmBnE,OAAO,MAAMiB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACK,YAAY,CAAC;AAAA;AAAAqB,GAAA,CAAzCD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}